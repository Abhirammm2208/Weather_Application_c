@page "/"
@using Microsoft.AspNetCore.Components.Web
@rendermode @(new InteractiveServerRenderMode())
@inject WeatherService WeatherService

<PageTitle>Weather Forecast</PageTitle>

<style>
    .weather-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 20px;
    }

    .search-container {
        background: linear-gradient(135deg, #6e8efb, #7873f5);
        padding: 2rem;
        border-radius: 10px;
        margin-bottom: 2rem;
        text-align: center;
    }

    .search-input {
        width: 60%;
        padding: 12px 20px;
        border: none;
        border-radius: 25px;
        margin-right: 10px;
        font-size: 16px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .search-button {
        padding: 12px 25px;
        border: none;
        border-radius: 25px;
        background-color: white;
        color: #6e8efb;
        cursor: pointer;
        font-weight: bold;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }

    .search-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .forecast-title {
        color: #007bff;
        text-align: center;
        margin: 20px 0;
        font-size: 24px;
        font-weight: bold;
    }

    .forecast-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .forecast-card {
        background-color: #f8f9fa;
        border-radius: 15px;
        padding: 20px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
    }

    .forecast-card:hover {
        transform: translateY(-5px);
    }

    .date {
        color: #6c757d;
        font-weight: 500;
        margin-bottom: 15px;
    }

    .weather-icon {
        width: 64px;
        height: 64px;
        margin: 10px auto;
    }

    .temperature {
        font-size: 32px;
        font-weight: bold;
        color: #343a40;
        margin: 10px 0;
    }

    .condition {
        color: #6c757d;
        margin: 5px 0;
        font-size: 16px;
    }

    .humidity {
        color: #6c757d;
        margin: 10px 0;
        font-size: 14px;
    }

    .humidity i {
        color: #007bff;
        margin-right: 5px;
    }
</style>

<div class="weather-container">
    <div class="search-container">
        <h2 class="text-white mb-4">Weather Forecast</h2>
        <div>
            <input @bind="city" 
                   @bind:event="oninput" 
                   @onkeypress="@(e => HandleKeyPress(e))"
                   class="search-input" 
                   placeholder="Enter city name" />
            <button @onclick="GetWeather" class="search-button">
                Search
            </button>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(city) && weatherResponse?.Forecasts != null && weatherResponse.Forecasts.Any())
    {
        <h3 class="forecast-title">@city - 5 Day Forecast</h3>
        <div class="forecast-grid">
            @foreach (var forecast in weatherResponse.Forecasts)
            {
                <div class="forecast-card">
                    <div class="date">
                        @DateTime.Parse(forecast.Date).ToString("dddd, MMM d")
                    </div>
                    @if (forecast.Conditions.Any())
                    {
                        <img src="@($"https://openweathermap.org/img/wn/{forecast.Conditions[0].Icon}@2x.png")" 
                             alt="@forecast.Conditions[0].Description" 
                             class="weather-icon" />
                        <div class="condition">@forecast.Conditions[0].Description</div>
                    }
                    <div class="temperature">@Math.Round(forecast.TemperatureDetails.Temperature, 2)°C</div>
                    <div class="humidity">
                        <i class="fas fa-tint"></i> Humidity: @forecast.TemperatureDetails.Humidity%
                    </div>
                </div>
            }
        </div>
    }
    else if (isLoading)
    {
        <div class="text-center mt-4">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
</div>

@code {
    private string city = "";
    private WeatherResponse? weatherResponse;
    private bool isLoading = false;

    private async Task GetWeather()
    {
        if (!string.IsNullOrWhiteSpace(city))
        {
            isLoading = true;
            try
            {
                weatherResponse = await WeatherService.GetFiveDayForecastAsync(city);
            }
            finally
            {
                isLoading = false;
            }
        }
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await GetWeather();
        }
    }
} 
